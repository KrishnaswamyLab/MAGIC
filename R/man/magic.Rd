% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/magic.R
\name{magic}
\alias{magic}
\title{Perform MAGIC on a data matrix}
\usage{
magic(data, genes = NULL, k = 5, alpha = 15, t = "auto", npca = 100,
  rescale_percent = 0, init = NULL, t.max = 20,
  knn.dist.method = "euclidean", verbose = 1, n.jobs = 1, seed = NULL)
}
\arguments{
\item{data}{input data matrix}

\item{genes}{character or integer vector, default: NULL
vector of column names or column indices for which to return smoothed data
If 'all_genes' or NULL, the entire smoothed matrix is returned}

\item{k}{int, optional, default: 5
number of nearest neighbors on which to build kernel}

\item{alpha}{int, optional, default: 15
sets decay rate of kernel tails.
If NULL, alpha decaying kernel is not used}

\item{t}{int, optional, default: 'auto'
power to which the diffusion operator is powered
sets the level of diffusion}

\item{npca}{number of PCA components that should be used; default: 20.}

\item{rescale_percent}{To which percentile should the data be re-scaled.
Expects an integer between 0 and 100. If 0, no rescaling is done.
Note: Do not set this higher than 0 if your data has negative values e.g.
log transformed data.
Default: 0.}

\item{init}{magic object, optional
object to use for initialization. Avoids recomputing
intermediate steps if parameters are the same.}

\item{t.max}{int, optional, default: 20
Maximum value of t to test for automatic t selection.}

\item{knn.dist.method}{string, optional, default: 'euclidean'.
recommended values: 'euclidean', 'cosine'
Any metric from `scipy.spatial.distance` can be used
distance metric for building kNN graph.}

\item{verbose}{`int` or `boolean`, optional (default : 1)
If `TRUE` or `> 0`, print verbose updates.}

\item{n.jobs}{`int`, optional (default: 1)
The number of jobs to use for the computation.
If -1 all CPUs are used. If 1 is given, no parallel computing code is
used at all, which is useful for debugging.
For n_jobs below -1, (n.cpus + 1 + n.jobs) are used. Thus for
n_jobs = -2, all CPUs but one are used}

\item{seed}{int or `NULL`, random state (default: `NULL`)}
}
